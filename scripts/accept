#!/bin/bash

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

source "$DIR/util"

isMinioValid() {
  title "Checking minio is in valid state (verdaccio bucket exists & db is initialized)"
  {
    mc config host add example $MINIO_ENDPOINT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
    [[ "$(mc ls example)" =~ 'verdaccio' ]] || error "Verdaccio bucket does not exists, meaning a problem happened during plugin initialization"
    [[ "$(mc ls example/verdaccio)" =~ 'db.json' ]] || error "Verdaccio database does not exists, meaning a problem happened during plugin initialization"

    if mc ls example/verdaccio | grep -q 'async'; then
      panic "Verdaccio bucket already contains packages, meaning cleanup didn't happend correctly"
    fi
  } || {
    panic "Failed to validate minio state"
  }
}

isYarnAbleToInstall() {
  title "Try installing dependencies using verdaccio as a proxy"
  {
    rm -rf ./node_modules
    yarn cache clean
    yarn install --har --verbose --registry=$VERDACCIO_ENDPOINT >"$DIR/../example/out.yarn.log"
  } || {
    panic "Failed to install dependencies through verdaccio"
  }
}

# Build plugin
build

# Copy plugin to the example directory
copy

# Remove old containers to start from scratch
prune

# Build & Start the containers
start

# Check if minio is ok
isMinioValid

# Check if install through verdaccio is ok
isYarnAbleToInstall

# Stop all containers & remove volumes, but save logs to ./example
cleanup

# Go back to project root directory
root
